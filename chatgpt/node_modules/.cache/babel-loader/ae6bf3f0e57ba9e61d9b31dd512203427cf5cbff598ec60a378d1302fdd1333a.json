{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakshya\\\\OneDrive\\\\Desktop\\\\coding\\\\chatgpt\\\\chatgpt\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [chats, setChats] = useState([]);\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setUploadedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSignUp = () => {\n    // Implement your sign up logic here\n  };\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n  };\n  const handleUpload = () => {\n    // Implement your upload logic here\n  };\n  const handleNewChat = () => {\n    setChats([...chats, {\n      uploadedImage: null\n    }]);\n  };\n  const handleChatImageChange = (index, event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const newChats = [...chats];\n        newChats[index].uploadedImage = reader.result;\n        setChats(newChats);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidemenu\",\n      children: [\"COMPANY NAME\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-chat-button\",\n        onClick: handleNewChat,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [chat.uploadedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"400px\",\n              height: \"200px\"\n            },\n            src: chat.uploadedImage,\n            alt: \"Uploaded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload\",\n            onClick: () => handleUpload(index),\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"1\",\n          className: \"chattext\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `file-input-${index}`,\n          className: \"upload-button\",\n          children: \"Choose File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          className: \"file-input\",\n          id: `file-input-${index}`,\n          onChange: event => handleChatImageChange(index, event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rpsOMFNWZqQp5ykdwVbtf5aY0qo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","uploadedImage","setUploadedImage","email","setEmail","password","setPassword","isAuthenticated","setIsAuthenticated","chats","setChats","handleImageChange","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","handleSignUp","handleLogin","handleUpload","handleNewChat","handleChatImageChange","index","newChats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","style","width","height","src","alt","rows","htmlFor","type","accept","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/lakshya/OneDrive/Desktop/coding/chatgpt/chatgpt/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [chats, setChats] = useState([]);\n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setUploadedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSignUp = () => {\n    // Implement your sign up logic here\n  };\n\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n  };\n\n  const handleUpload = () => {\n    // Implement your upload logic here\n  };\n\n  const handleNewChat = () => {\n    setChats([...chats, { uploadedImage: null }]);\n  };\n\n  const handleChatImageChange = (index, event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const newChats = [...chats];\n        newChats[index].uploadedImage = reader.result;\n        setChats(newChats);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* ... */}\n      <aside className=\"sidemenu\">\n        COMPANY NAME\n        <button className=\"new-chat-button\" onClick={handleNewChat}>\n          New Chat\n        </button>\n      </aside>\n      <section className=\"chatbox\">\n        {chats.map((chat, index) => (\n          <div key={index} className=\"chat\">\n            {chat.uploadedImage && (\n              <div className=\"uploaded-image\">\n                <img\n                  style={{ width: \"400px\", height: \"200px\" }}\n                  src={chat.uploadedImage}\n                  alt=\"Uploaded\"\n                />\n                <button className=\"upload\" onClick={() => handleUpload(index)}>\n                  Upload\n                </button>\n              </div>\n            )}\n\n            <textarea rows=\"1\" className=\"chattext\"></textarea>\n            <label htmlFor={`file-input-${index}`} className=\"upload-button\">\n              Choose File\n            </label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              className=\"file-input\"\n              id={`file-input-${index}`}\n              onChange={(event) => handleChatImageChange(index, event)}\n            />\n          </div>\n        ))}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}